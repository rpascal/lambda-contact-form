plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'com.coldbrewcode'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11' //targetting jdk11 binaries for now to avoid

repositories {
    mavenCentral()
    maven {
        url = 's3://ryandpascal-artifacts/releases'
        credentials(AwsCredentials) {
            accessKey = System.env.AWS_ACCESS_KEY_ID ?: findProperty('aws_access_key_id')
            secretKey = System.env.AWS_SECRET_ACCESS_KEY ?: findProperty('aws_secret_access_key')
        }
    }
}

dependencies {
    compileOnly "com.oracle.substratevm:svm:19.2.1"

    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    implementation "org.slf4j:slf4j-simple:${slf4j_version}"

    implementation "org.graalvm.js:js:${graalvm_version}"

    // Own Dependencies
    implementation 'com.coldbrewcode:coldbrewcode-aws:0.0.15'
    implementation 'com.coldbrewcode:coldbrewcode-common:0.0.5'

    testImplementation platform("org.junit:junit-bom:${junit_version}")
    testImplementation "org.junit.jupiter:junit-jupiter:${junit_version}"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.coldbrewcode.contact.LambdaContactFormBootstrap'
        )
    }
}
shadowJar {
    mergeServiceFiles()
    archiveBaseName.set('bootstrap')
    archiveClassifier.set('')
    archiveVersion.set('')

}

task runMockContactFormLambdaServer(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run a mock lambda server"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), "com.coldbrewcode.contact.LambdaContactFormMockServerApplication"
}
